name: E2E Test

# This builds all binary versions and runs the end-to-end test against test Dynatrace environments
# This currently only runs on push to main and nightly

on:
  push:
    branches: [ main ]
  schedule:
  # nightly build ensure E2E tests run daily and catch any breaking API changes
  - cron: '0 0 * * *'
  pull_request_target:
    types: [ labeled ]

defaults:
  run:
    shell: bash

env:
  E2E_TEST_LABEL: 'run-e2e-test'

jobs:

  release-binaries:
    name: Build release binaries
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
    - name: Release binaries
      if: (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
      uses: ./.github/actions/run-e2e-command
      with:
        go-version: '~1.20'
        command: make build-release

  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write

    steps:
    - name: Integration test
      if: (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
      uses: ./.github/actions/run-e2e-command
      with:
        go-version: '~1.20'
        command: make integration-test testopts="--junitfile test-result-integration.xml"


  legacy-integration:
    name: Legacy Integration tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
    - name: Legacy Integration test
      if: (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
      uses: ./.github/actions/run-e2e-command
      with:
        go-version: '~1.20'
        command: make integration-test testopts="--junitfile test-result-integration-legacy.xml"

  download-restore:
    name: Download Restore
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
    - name: Download-restore-test
      if: (github.event.action != 'labeled' || github.event.label.name == env.E2E_TEST_LABEL)
      uses: ./.github/actions/run-e2e-command
      with:
        go-version: '~1.20'
        command: make download-restore-test testopts="--junitfile test-result-integration-download-restore.xml"

  nightly:
    name: Nightly
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
    - name: Nightly
      if: github.event_name == 'schedule'
      uses: ./.github/actions/run-e2e-command
      with:
        go-version: '~1.20'
        command: make nightly-test testopts="--junitfile test-result-integration-nightly.xml"

  upload_event:
    name: "Upload Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 #v3.1.3
      with:
        name: event_file
        path: ${{ github.event_path }}
